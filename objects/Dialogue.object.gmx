<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
DiaSin=0
pre_v=0
global.DialogueOpen=0
Wasopen=0
Textchunk=0
drawntext=''
global.ChatText[0]=''
speaktimer=0
pausetimer=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Positioning
BoxScale=scaleto_x(DialogueBox,window_get_width())
if global.DialogueOpen
{
    if instance_exists(Player) Player.dismove=2;
    if instance_exists(Player) Player.attacktime=1;
    if DiaSin&lt;pi/2 DiaSin+=0.2 else DiaSin=pi/2;
}
else
{
    if DiaSin&gt;0 DiaSin-=0.2 else DiaSin=0;
}
pre_v=(sin(DiaSin)*(sprite_get_height(DialogueBox)*BoxScale));
y=window_get_height()-pre_v;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stuff
if keyboard_check_pressed(global.key_meelee) or gamepad_button_check_pressed(0,12)
{
    if global.DialogueOpen
    {
        if string_length(drawntext)=string_length(global.ChatText[Textchunk])
        {
            if Textchunk&lt;array_length_1d(global.ChatText)-1
            {
                Textchunk++;
                drawntext=''
            }
            else global.DialogueOpen=0;
        }
        else drawntext=global.ChatText[Textchunk];
    }
}
if Wasopen&gt;global.DialogueOpen
{
    Cam.zoom=0
    temparray[0]='';
    global.ChatText=temparray;
    Textchunk=0;
    drawntext='';
}
if Wasopen&lt;global.DialogueOpen
{
}
Wasopen=global.DialogueOpen
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Text display
//Graphics setup
draw_sprite_ext(DialogueBox,0,x,y,BoxScale,BoxScale,0,c_white,sin(DiaSin));
draw_set_font(MingLU);
draw_set_colour(c_white);
if sin(DiaSin)&gt;0.99
{
    if string_length(drawntext)!=string_length(global.ChatText[Textchunk])
    {
        //Test for punctuation
        currentchar=string_char_at(drawntext,string_length(drawntext))
        if currentchar='.' or currentchar='!' or currentchar='?'
        {
            if pausetimer&lt;20
            {
                dowrite=0
                pausetimer++;
            }
            else
            {
                pausetimer=0;
                dowrite=1;
            }
        }
        if currentchar=','
        {
            if pausetimer&lt;10
            {
                dowrite=0
                pausetimer++;
            }
            else
            {
                pausetimer=0;
                dowrite=1;
            }
        }
        //Actually writing
        if dowrite=1
        {
            drawntext=string_copy(global.ChatText[Textchunk],1,string_length(drawntext)+1);
            //Sound
            
            if speaktimer=0
            {
                Sound_Play(global.SpeakHighsound,0.6,global.ChatPitch*0.85,global.ChatPitch*1.15);
                speaktimer=4;
            }
        }
    }
    draw_text_ext_transformed(x+(10*BoxScale),y+(10*BoxScale),drawntext,40,1280-20,BoxScale,BoxScale,0);
}
dowrite=1;
if speaktimer&gt;0 speaktimer--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
