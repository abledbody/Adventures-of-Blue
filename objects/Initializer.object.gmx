<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1215752192</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load cfg
ini_open("cfg.ini")
if !ini_key_exists('keys','key_left')
ini_write_real('keys','key_left',37)
if !ini_key_exists('keys','key_right')
ini_write_real('keys','key_right',39)
if !ini_key_exists('keys','key_jump')
ini_write_real('keys','key_jump',38)
if !ini_key_exists('keys','key_down')
ini_write_real('keys','key_down',40)
if !ini_key_exists('keys','key_kill')
ini_write_real('keys','key_kill',75)
if !ini_key_exists('keys','key_meelee')
ini_write_real('keys','key_meelee',ord('A'))
if !ini_key_exists('keys','key_ranged')
ini_write_real('keys','key_ranged',ord('S'))
if !ini_key_exists('Volume','Music')
ini_write_real('Volume','Music',0.8)
if !ini_key_exists('Volume','Sound')
ini_write_real('Volume','Sound',1)
if !ini_key_exists('keys','key_pause')
ini_write_real('keys','key_pause',vk_escape)
if !ini_key_exists('keys','key_talk')
ini_write_real('keys','key_talk',ord('Q'))
global.key_left = ini_read_real('keys','key_left',37)
global.key_right = ini_read_real('keys','key_right',38)
global.key_jump = ini_read_real('keys','key_jump',39)
global.key_down = ini_read_real('keys','key_down',40)
global.key_kill = ini_read_real('keys','key_kill',75)
global.key_meelee = ini_read_real('keys','key_meelee',ord('A'))
global.key_ranged = ini_read_real('keys','key_ranged',ord('S'))
global.musicvolume = ini_read_real('Volume','Music',0.8)
global.soundvolume = ini_read_real('Volume','Sound',1)
global.key_pause = ini_read_real('keys','key_pause',vk_escape)
global.key_talk = ini_read_real('keys','key_talk',ord('Q'))
ini_close()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
musicnameI='not 0';
global.PRT[0]=0;
global.PRT[1]=0;
global.PRT[2]=0;
global.PRT[3]=0;
global.screenshake=0;
pause=0;
global.roomtrans=0;
roomtransB=0;
global.Ikey_pressed=0;
tick=0;
selection=0;
global.flash=0;
blur_rad=shader_get_uniform(Blur,'radius');
blur_size=shader_get_uniform(Blur,'size');
display_set_gui_maximise();
display_reset(4,1);
global.roomentry=0
transition_surf=-1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Music init
//FMOD init
LoadFMOD()
FMODinit(100,0)
//Music start
MSC_Menu=FMODSoundAdd("data/music/Menu.it",false,true)
MSC_Caves=FMODSoundAdd("data/music/Caves of Lost Time.it",false,true)
MSC_Desolate=FMODSoundAdd("data/music/Desolate.it",false,true)
MSC_Crossbows=FMODSoundAdd("data/music/Crossbows.it",false,true)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load sounds
global.speakhigh=-1;
global.slidesound=FMODSoundAdd("data/sound/slidesound.wav",0,0);
global.instanceslidesound=FMODSoundLoop(global.slidesound,0);
FMODInstanceSetVolume(global.instanceslidesound,0);
global.jumpsound=FMODSoundAdd("data/sound/Jump.wav",0,0);
global.landsound=FMODSoundAdd("data/sound/Land.wav",0,0);
global.breaksound=FMODSoundAdd("data/sound/Wallbreak.wav",0,0);
global.powerupsound=FMODSoundAdd("data/sound/Powerup.wav",0,0);
global.Clipclop1sound=FMODSoundAdd("data/sound/Clipclop1.wav",0,0);
global.Clipclop2sound=FMODSoundAdd("data/sound/Clipclop2.wav",0,0);
global.SpeakHighsound=FMODSoundAdd("data/sound/SpeakHigh.wav",0,0);
global.Thunder1sound=FMODSoundAdd("data/sound/Thunder1.wav",0,0);
global.Thunder2sound=FMODSoundAdd("data/sound/Thunder2.wav",0,0);
global.Rainsound=FMODSoundAdd("data/sound/Rain.wav",0,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to Game Over
if room&gt;5
room_goto(GameOver)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///FMOD update
FMODUpdate()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause control
global.Ikey_pause=keyboard_check_pressed(global.key_pause)
if room&gt;5
if global.Ikey_pause
{
    if pause=0
    {
        pause=1
        selection=1
        instance_deactivate_all(true)
        FMODInstanceSetVolume(global.instanceslidesound,0)
    }
    else
    {
        pause=0
        instance_activate_all()
    }
}
if pause
{
    if keyboard_check_pressed(global.key_meelee)
    {
        if selection=1 {pause=0 instance_activate_all()}
        if selection=2 {pause=0 instance_activate_all() room_goto(Menu)}
    }
    if keyboard_check_pressed(global.key_right) if selection&lt;2 selection += 1 else selection = 1
    if keyboard_check_pressed(global.key_left) if selection&gt;1 selection -= 1 else selection = 2
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///roomtrans Pause
if global.roomtrans&gt;0
{
    global.roomtrans--;
}
if global.roomtrans&gt;20
{
    if roomtransB=0
    {
        transition_surf=surface_create(window_get_width(),window_get_height())
        surface_copy(transition_surf,0,0,application_surface);
        roomtransB=1;
        instance_deactivate_all(true);
        FMODInstanceSetVolume(global.instanceslidesound,0);
    }
}
else
if roomtransB=1
{
    transition_surf=-1;
    instance_activate_all();
    roomtransB=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flash
if global.flash&gt;0
global.flash-=0.1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create objects
if room&gt;6
{
    instance_create(0,0,Player)
    instance_create(0,0,Cam)
    instance_create(0,0,HudControl)
    instance_create(0,0,Dialogue)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///FMOD cleanup
FMODAllStop()
UnloadFMOD()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*view_xyview[0]=room_width;
view_xyview[1]=room_height;
shader_set(Blur);
shader_set_uniform_f_array(blur_size,view_xyview)
if instance_exists(Cam)
{
    if round(global.screenshake)&gt;0
    {
        shader_set_uniform_f(blur_rad,global.screenshake*0.8);
    }
    else
    {
        shader_set_uniform_f(blur_rad,0);
    }
    
}*/
//draw_surface(application_surface,0,0);
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if instance_exists(Roompoints)
{
    if Roompoints.Blue_Tint_Shader
    {
        shader_set(Blue_Tint);
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>pause</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>526</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_font</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>12</kind>
            <font>Impact</font>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Pause menu
display_set_gui_maximise()
draw_set_colour(c_black)
draw_rectangle(0,0,window_get_width(),window_get_height(),0)
draw_set_colour(c_white)
draw_text(window_get_width()/2,100,"PAUSED")
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>526</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_font</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>12</kind>
            <font>Cordia</font>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw options
if tick&lt;40 tick+=1 else tick=0
draw_set_colour(c_white)
if selection = 1
{
    draw_text((window_get_width()/2)+120,400,"Quit")
    if tick&lt;20 draw_text((window_get_width()/2)-30,400-12,"Continue")
    else draw_text((window_get_width()/2)-30,400-12,"&gt;Continue")
}
if selection = 2
{
    draw_text((window_get_width()/2)-30,400,"Continue")
    if tick&lt;20 draw_text((window_get_width()/2)+120,400-12,"Quit")
    else draw_text((window_get_width()/2)+120,400-12,"&gt;Quit")
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.flash</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw flash
draw_set_alpha(global.flash)
draw_rectangle(0,0,window_get_width(),window_get_height(),0)
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw surface
if global.roomtrans&gt;20
if surface_exists(transition_surf) draw_surface(transition_surf,0,0)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.roomtrans</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw blackout
draw_set_colour(c_black);
if global.roomtrans&gt;20
draw_set_alpha((-global.roomtrans+40)*0.06);
if global.roomtrans&lt;=20
draw_set_alpha(global.roomtrans*0.06);
draw_rectangle(0,0,window_get_width(),window_get_height(),0);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="122">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fullscreen toggle
if window_get_fullscreen()
    window_set_fullscreen(0)
else
    window_set_fullscreen(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="121">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room=0
file_delete("cfg.ini")
game_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
