<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Characterbounding</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>Characterbounding</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
visible=1;
GPdisJump=0;
GPdisDown=0;
pre_h = 0;
pre_v = 0;
sliding = 0;
prev_x = x;
prev_y = y;
Promptx = 0;
Prompty = 0;
dismove = 0;
disroll = 0;
slowslide = 0;
roll = 0;
lastmove = 1;
walkindex = 0;
lastWI = 0;
rollindex = 0;
idleindex = 0;
immunity = 0;
attacktime = 0;
joylast = 0;
/*TO DELETE*/ hasRanged = 1; hasMeelee = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>423</id>
        <kind>5</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>20</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Bloody</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>+20</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>Initializer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>130</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>FMODInstanceSetVolume(global.instanceslidesound,0)
global.screenshake+=6
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>prev_x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>prev_y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basically everything important
if disroll!=roll pre_h=pre_h*0.2
if disroll=0 roll=0
var o=0
//Joystick button check
while o&lt;31
{
    if gamepad_button_check(0,o)&gt;0.2 {joylast=1 break}
    else o++;
}
o=0
while o&lt;6
{
    if abs(gamepad_axis_value(0,o))&gt;0.2 {joylast=1 break}
    else o++;
}
if keyboard_check(vk_anykey) joylast=0
//Keychecks
if disroll=0 and dismove=0
{
    if joylast
    {
        key_jumpreleaseI=0;
        key_leftI=gamepad_axis_value(0,0);
        key_rightI=gamepad_axis_value(0,0);
        if key_leftI&gt;-0.05 key_leftI=0;
        if key_rightI&lt;0.05 key_rightI=0;
        key_jumpI = gamepad_button_check_pressed(0,12);
        key_jumpreleaseI = gamepad_button_check_released(0,12);
    }
    else
    {
        key_leftI = -keyboard_check(global.key_left);
        key_rightI = keyboard_check(global.key_right);
        key_jumpI = keyboard_check_pressed(global.key_jump);
        key_jumpreleaseI = keyboard_check_released(global.key_jump);
    }
}
if joylast
{
    if gamepad_axis_value(0,1)&lt;-0.7 key_downI=1;
    else key_downI=0;
    if gamepad_axis_value(0,1)&lt;-0.7
    {
        if GPdisDown=0 {key_downpressI=1 GPdisDown=1} else key_downpress=0
    }
    else {key_downpressI=0 GPdisDown=0}
}
else
{
    key_downI = keyboard_check(global.key_down)
    key_downpressI = keyboard_check_pressed(global.key_down)
}
key_killI = keyboard_check(global.key_kill)
//Left/Right
{
    move = key_leftI+key_rightI
    if move&gt;0 {if attacktime=0 lastmove=1 if pre_h&lt;global.plmovespeed pre_h+=move*global.placceleration}
    if move&lt;0 {if attacktime=0 lastmove=-1 if pre_h&gt;-global.plmovespeed pre_h+=move*global.placceleration}
    if move=0 if pre_h!=0 pre_h+=-pre_h*global.placceleration*0.125
}
//Sliding check for gravity
if (slowslide=0)
{
    if (pre_v&lt;32) pre_v+=1*global.grav
}
else if (pre_v&lt;4) pre_v+=1*global.grav else if (pre_v&gt;4) pre_v+=-0.6
//Jump release check
if key_jumpreleaseI
if dismove=0
if (pre_v &lt;0) pre_v=0
//Slide checks
if (place_meeting(x+1,y,Wall))
{
    if pre_v&gt;0 if !place_meeting(x,y+1,Wall)
    {
        if sliding=0
        {
            Sound_Clipclop()
            Sound_Clipclop()
        }
        lastmove=-1
        sliding=1
    }
}
else if (place_meeting(x-1,y,Wall))
{
    if pre_v&gt;0 if !place_meeting(x,y+1,Wall)
    {
        if sliding=0
        {
            Sound_Clipclop()
            Sound_Clipclop()
        }
        lastmove=1
        sliding=-1
    }
} else if global.Jellyfish=0 sliding=0
if (place_meeting(x+sign(move),y,Wall)) slowslide=1 else slowslide=0
//Slide FX
if sliding!=0 {instance_create(x+(sliding*32),y,Dustparticle) FMODInstanceSetVolume(global.instanceslidesound,pre_v*0.0625*global.soundvolume)} else FMODInstanceSetVolume(global.instanceslidesound,0)
//Jump checks
if (place_meeting(x,y+1,Wall))
{
    sliding=0
    pre_v=-key_jumpI*global.pljumpspeed;
    if key_jumpI Sound_Jump()
    if global.plpwjumpcrocs and place_meeting(x,y,obj_Jumppad) pre_v=-key_jumpI*28
}
else//Walljump bits
{
    if (key_jumpI=1)
    {
        if (sliding=1)
        {
            pre_v=-global.pljumpspeed/(2/global.placceleration)
            pre_h=-17
            dismove=global.pldismovetime
            Sound_Jump()
        }
        if (sliding=-1)
        {
            pre_v=-global.pljumpspeed/(2/global.placceleration)
            pre_h=17
            dismove=global.pldismovetime
            Sound_Jump()
        }
    }
}
//Roll move
if roll = 1
{
    attacktime=1
    pre_h=lastmove*(global.plmovespeed*1.5)
}
//Rampfall Check
if place_meeting(x+pre_h,y+abs(pre_h)+2,Wall)
{
    J=0;
    while (!place_meeting(x+pre_h,y+J,Wall)) and J&lt;=abs(pre_h) J++
    J+=-1
    if !place_meeting(x+pre_h,y+J,Wall)
    y+=J
}
//Collision check horizontal
if (place_meeting(x+pre_h,y,Wall))
{
    //Ramp check
    R=0;
    while (place_meeting(x+pre_h,y-R,Wall)) and R&lt;=abs(pre_h) R++
    if place_meeting(x+pre_h,y-R,Wall)
    {
        //Stopper
        while (!place_meeting(x+sign(pre_h),y,Wall)) x+=sign(pre_h)
        pre_h=0
    }
    else
    y-=R
}
x+=pre_h
//Roll check
/*if key_downpressI
{
    if abs(pre_h)&gt;global.plmovespeed*0.8 var dotheroll=1
    else var dotheroll=0
}
else*/
if key_downI and pre_v&gt;3
var dotheroll=1
else var dotheroll=0
if dotheroll
{
    if (place_meeting(x,y+pre_v+1,Wall))
    {
        disroll = 10
        roll = 1
    }
}
//Collision check vertical
if (place_meeting(x,y+pre_v,Wall))
{
    if !key_downI {if pre_v&gt;0 {global.screenshake=pre_v*0.16 Sound_Clipclop() Sound_Clipclop()} if pre_v&gt;24 {global.plhealth+=-pre_v immunity=20 global.screenshake+=3}
    else
    while (!place_meeting(x,y+sign(pre_v),Wall)) y+=sign(pre_v)}
    else
    while (!place_meeting(x,y+sign(pre_v),Wall)) y+=sign(pre_v)
    pre_v=0
}
y+=pre_v
if disroll&gt;0 {disroll+=-1 key_leftI=0 key_rightI=0 key_jumpI=0}
if dismove&gt;0 {dismove+=-1 key_leftI=0 key_rightI=0 key_jumpI=0}
if immunity&gt;0 immunity+=-1
//Animation
image_yscaleN = scaleto_x(Character,75)
image_xscaleN = scaleto_x(Character,75)*lastmove
if sliding!=0 {image_indexN=11 rollindex=0}
else
{
    //Check for rolling
    if roll!=0 {image_indexN=rollindex+7 if rollindex&gt;3 rollindex=0 rollindex+=0.5 walkindex=0}
    else
    {
        //What to do if falling
        rollindex=0
        if !place_meeting(x,y+1,Wall)
        {
            if key_downI image_indexN=13
            else
            {
                if pre_v&gt;=0 image_indexN=6
                else
                {
                if pre_v&lt;0 image_indexN=5
                }
            }
        }
        else
        {
            //Turnaround slide
            if move!=0 and sign(pre_h)!=sign(move) and pre_h!=0
            {
                image_indexN=12 instance_create(x+(sign(pre_h)*26),y+32,Dustparticle) FMODInstanceSetVolume(global.instanceslidesound,abs(pre_h*0.03125)*global.soundvolume)
            }
            else
            //Walking
            {
                if floor(abs(pre_h))!=0
                {
                    if walkindex&gt;4 walkindex=0;
                    image_indexN=floor(walkindex+1);
                    walkindex+=0.03125*abs(pre_h);
                    if round(walkindex)!=lastWI
                    {
                        if round(walkindex)=0 or round(walkindex)=2
                        {
                            Sound_Clipclop()
                        }
                    }
                    lastWI=round(walkindex)
                }
                //Standing
                else {walkindex=0 image_indexN=0}}
            }
        }
}
if immunity mod 4 = 0 image_alphaN=1
else image_alphaN=0
if key_killI global.plhealth=0
if global.plhealth&lt;0 global.plhealth=0
global.plhealth=round(global.plhealth)
if global.plhealth&lt;1 instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack script
//Meelee
if hasMeelee=1
{
    if attacktime&gt;0 attacktime+=-1
    else
    {
        if keyboard_check_pressed(global.key_meelee) or gamepad_button_check_pressed(0,13)
        {
            instance_create(x,y,Attack)
            attacktime=11
        }
        if keyboard_check_pressed(global.key_ranged) or gamepad_button_check_pressed(0,14)
        {
            instance_create(Flyer.x,Flyer.y,Projectile)
            attacktime=11
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chat Script
if instance_exists(NPC)
{
    nearestNPC=instance_nearest(x,y,NPC)
    if keyboard_check_pressed(global.key_talk) or gamepad_button_check_pressed(0,15)
    if point_distance(x,y,nearestNPC.x,nearestNPC.y)&lt;130
    {
        Cam.zoom=1;
        global.DialogueOpen=1;
        global.ChatText=nearestNPC.localtext;
        global.ChatPitch=nearestNPC.localpitch;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hit detection
if roll=0
if immunity=0
if dismove=0
{
    dismove=5
    pre_h=-lastmove*10
    pre_v=-5
    immunity=50
    global.plhealth+=-other.damage
    global.screenshake+=4
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Spike">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.plhealth</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.roomentry&gt;0
{
    x=Roompoints.playerx+global.PRT[0];
    y=Roompoints.playery+global.PRT[1];
    pre_h=global.PRT[2];
    pre_v=global.PRT[3];
}
else
{
    x=Roompoints.playerx;
    y=Roompoints.playery;
}
if global.hasDB=1 instance_create(x,y,Flyer);
if sign(pre_h)!=0 lastmove=sign(pre_h)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(Character,image_indexN,x,y,image_xscaleN,image_yscaleN,0,c_white,image_alphaN)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
